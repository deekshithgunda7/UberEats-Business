// <auto-generated />
using GuitarShop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuitarShop.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GuitarShop.Models.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            Name = "Restaurent"
                        },
                        new
                        {
                            CategoryID = 2,
                            Name = "Grocery"
                        },
                        new
                        {
                            CategoryID = 3,
                            Name = "Alcohol"
                        },
                        new
                        {
                            CategoryID = 4,
                            Name = "Convienience"
                        },
                        new
                        {
                            CategoryID = 5,
                            Name = "Flower shop"
                        },
                        new
                        {
                            CategoryID = 6,
                            Name = "Pet Store"
                        },
                        new
                        {
                            CategoryID = 7,
                            Name = "retail"
                        });
                });

            modelBuilder.Entity("GuitarShop.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"), 1L, 1);

                    b.Property<string>("BusinessAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BusinessPhone")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            BusinessAddress = "Stratocaster",
                            BusinessEmail = "Stratocaster@gmail.com",
                            BusinessName = "strat",
                            BusinessPhone = 908876754,
                            CategoryID = 1
                        },
                        new
                        {
                            ProductID = 2,
                            BusinessAddress = "Gibson Les Paul",
                            BusinessEmail = "les_paul@gmail.com",
                            BusinessName = "les_paul",
                            BusinessPhone = 908876754,
                            CategoryID = 1
                        },
                        new
                        {
                            ProductID = 3,
                            BusinessAddress = "Gibson SG",
                            BusinessEmail = "sg@gmail.com",
                            BusinessName = "sg",
                            BusinessPhone = 908876754,
                            CategoryID = 1
                        },
                        new
                        {
                            ProductID = 4,
                            BusinessAddress = "Yamaha FG700S",
                            BusinessEmail = "fg700s@gmail.com",
                            BusinessName = "fg700s",
                            BusinessPhone = 908876754,
                            CategoryID = 7
                        },
                        new
                        {
                            ProductID = 5,
                            BusinessAddress = "Washburn D10S",
                            BusinessEmail = "washburn@gmail.com",
                            BusinessName = "washburn",
                            BusinessPhone = 908876754,
                            CategoryID = 7
                        },
                        new
                        {
                            ProductID = 6,
                            BusinessAddress = "Rodriguez Caballero 11",
                            BusinessEmail = "rodriguez@gmail.com",
                            BusinessName = "rodriguez",
                            BusinessPhone = 908876754,
                            CategoryID = 4
                        },
                        new
                        {
                            ProductID = 7,
                            BusinessAddress = "Fender Precision",
                            BusinessEmail = "precision@gmail.com",
                            BusinessName = "precision",
                            BusinessPhone = 908876754,
                            CategoryID = 2
                        },
                        new
                        {
                            ProductID = 8,
                            BusinessAddress = "Hofner Icon",
                            BusinessEmail = "hofner@gmail.com",
                            BusinessName = "hofner",
                            BusinessPhone = 908876754,
                            CategoryID = 2
                        },
                        new
                        {
                            ProductID = 9,
                            BusinessAddress = "Ludwig 5-piece Drum Set with Cymbals",
                            BusinessEmail = "ludwig@gmail.com",
                            BusinessName = "ludwig",
                            BusinessPhone = 908876754,
                            CategoryID = 3
                        },
                        new
                        {
                            ProductID = 10,
                            BusinessAddress = "Tama 5-Piece Drum Set with Cymbals",
                            BusinessEmail = "tama@gmail.com",
                            BusinessName = "tama",
                            BusinessPhone = 908876754,
                            CategoryID = 3
                        });
                });

            modelBuilder.Entity("GuitarShop.Models.Product", b =>
                {
                    b.HasOne("GuitarShop.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
